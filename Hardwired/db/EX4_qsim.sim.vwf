/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("add")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("add[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "add";
}

SIGNAL("add[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "add";
}

SIGNAL("add[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "add";
}

SIGNAL("add[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "add";
}

SIGNAL("add[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "add";
}

SIGNAL("add[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "add";
}

SIGNAL("add[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "add";
}

SIGNAL("add[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "add";
}

SIGNAL("CLK0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLK1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MATCH")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("S0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("T4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("w1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("w2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R0_t")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R0_t[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_t";
}

SIGNAL("R0_t[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_t";
}

SIGNAL("R0_t[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_t";
}

SIGNAL("R0_t[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_t";
}

SIGNAL("R0_t[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_t";
}

SIGNAL("R0_t[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_t";
}

SIGNAL("R0_t[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_t";
}

SIGNAL("R0_t[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_t";
}

SIGNAL("R1_t")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R1_t[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_t";
}

SIGNAL("R1_t[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_t";
}

SIGNAL("R1_t[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_t";
}

SIGNAL("R1_t[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_t";
}

SIGNAL("R1_t[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_t";
}

SIGNAL("R1_t[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_t";
}

SIGNAL("R1_t[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_t";
}

SIGNAL("R1_t[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_t";
}

SIGNAL("tPC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tPC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tPC";
}

SIGNAL("tPC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tPC";
}

SIGNAL("tPC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tPC";
}

SIGNAL("tPC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tPC";
}

SIGNAL("tPC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tPC";
}

SIGNAL("tPC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tPC";
}

SIGNAL("tPC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tPC";
}

SIGNAL("tPC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tPC";
}

SIGNAL("tIR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tIR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tIR";
}

SIGNAL("tIR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tIR";
}

SIGNAL("tIR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tIR";
}

SIGNAL("tIR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "tIR";
}

SIGNAL("tCPIR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tCPMAR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tCPPC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tCPR0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("tCPR1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("altera_reserved_tdo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("add[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("add[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("add[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("add[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("add[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 9420.0;
	}
}

TRANSITION_LIST("add[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 320.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("add[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("add[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 100.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("CLK0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 9990.0;
	}
}

TRANSITION_LIST("CLK1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("CN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 695.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 230.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 95.0;
	}
}

TRANSITION_LIST("M")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("MATCH")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("S0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("S1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("S2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("S3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 130.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 130.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 65.0;
	}
}

TRANSITION_LIST("T1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 249;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("T2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 249;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("T3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 249;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("T4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 249;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 25.0;
	}
}

TRANSITION_LIST("w1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 25.0;
	}
}

TRANSITION_LIST("w2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
	}
}

TRANSITION_LIST("R0_t[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4640.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 560.0;
	}
}

TRANSITION_LIST("R0_t[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4240.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 560.0;
	}
}

TRANSITION_LIST("R0_t[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3440.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("R0_t[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3040.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("R0_t[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 960.0;
	}
}

TRANSITION_LIST("R0_t[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1840.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 960.0;
	}
}

TRANSITION_LIST("R0_t[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1040.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 800.0;
			LEVEL 0 FOR 1600.0;
		}
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 960.0;
	}
}

TRANSITION_LIST("R0_t[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 400.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 800.0;
		}
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("R1_t[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4300.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("R1_t[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3900.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("R1_t[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3100.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 340.0;
	}
}

TRANSITION_LIST("R1_t[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2700.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("R1_t[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 900.0;
	}
}

TRANSITION_LIST("R1_t[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 900.0;
	}
}

TRANSITION_LIST("R1_t[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 700.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 900.0;
	}
}

TRANSITION_LIST("R1_t[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 620.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("tPC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("tPC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("tPC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("tPC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("tPC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 9480.0;
	}
}

TRANSITION_LIST("tPC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 190.0;
			LEVEL 0 FOR 210.0;
		}
		LEVEL 1 FOR 40.0;
	}
}

TRANSITION_LIST("tPC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 130.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 130.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 110.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 130.0;
		LEVEL 0 FOR 40.0;
	}
}

TRANSITION_LIST("tPC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 80.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 30.0;
				LEVEL 0 FOR 50.0;
			}
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("tIR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 830.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 290.0;
	}
}

TRANSITION_LIST("tIR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 750.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("tIR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 560.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("tIR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 590.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("tCPIR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 75.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 45.0;
	}
}

TRANSITION_LIST("tCPMAR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 35.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 75.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 35.0;
		}
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 75.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 35.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 15.0;
			}
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 75.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 35.0;
			}
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 35.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("tCPPC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 75.0;
		}
		NODE
		{
			REPEAT = 10;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 25.0;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 45.0;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 75.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 25.0;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 45.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 75.0;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 25.0;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 45.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 75.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 45.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 75.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 45.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 45.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 75.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 45.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("tCPR0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 640.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 395.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 155.0;
	}
}

TRANSITION_LIST("tCPR1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 615.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 155.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 235.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 95.0;
	}
}

TRANSITION_LIST("altera_reserved_tdo")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "add";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "add[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "add[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "add[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "add[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "add[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "add[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "add[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "add[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MATCH";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "T4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "w1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "w2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "R0_t[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "R1_t[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "tPC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49, 50;
}

DISPLAY_LINE
{
	CHANNEL = "tPC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "tPC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "tPC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "tPC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "tPC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "tPC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "tPC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "tPC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "tIR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
	CHILDREN = 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "tIR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "tIR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "tIR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "tIR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "tCPIR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tCPMAR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tCPPC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tCPR0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "tCPR1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "altera_reserved_tdo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
